{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "Creates two ec2 instances with Apache webserver installed and an ELB.",

	"Parameters": {
		"VpcId": {
			"Type": "AWS::EC2::VPC::Id",
			"Description": "VpcId of your existing Virtual Private Cloud (VPC)",
			"ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud.",
			"Default": "vpc-8fbd60e9"
		},
		"SSHLocation": {
			"Description": "The IP address range that can be used to SSH to the EC2 instances ",
			"Type": "String",
			"MinLength": "9",
			"MaxLength": "18",
			"Default": "0.0.0.0/0",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x / x."
		},

		"KeyName": {
			"Description": "The EC2 Key Pair to allow SSH access to the instances",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"Default": "ec2-s3-rakesh",
			"ConstraintDescription": "must be the name of an existing EC2 KeyPair."
		},

		"InstanceType": {
			"Description": "WebServer EC2 instance type",
			"Type": "String",
			"Default": "t2.small",
			"AllowedValues": ["t1.micro", "t2.nano", "t2.micro", "t2.small",

				"t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge",

				"m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge",

				"m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge",

				"c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge",

				"c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",

				"g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge",

				"r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge",

				"d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge",

				"cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"
			],
			"ConstraintDescription": "must be a valid EC2 instance type."
		},

		"Subnets": {
			"Type": "List<AWS::EC2::Subnet::Id>",
			"Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)",
			"Default": "subnet-73c1833a,subnet-c7d94d9c",
			"ConstraintDescription": "must be a list of at least two existing subnets associated with at least two different availability zones.They should be residingin the selected Virtual Private Cloud."
		}
	},

	"Mappings": {
		"AWSRegionArch2AMI": {
			"us-east-1": {
				"PV64": "ami-2a69aa47",
				"HVM64": "ami-6869aa05",
				"HVMG2"

				: "ami-c5eadcd3"
			},
			"us-west-2": {
				"PV64": "ami-7f77b31f",
				"HVM64": "ami-7172b611",
				"HVMG2"

				: "ami-aaebfcd3"
			},
			"us-west-1": {
				"PV64": "ami-a2490dc2",
				"HVM64": "ami-31490d51",
				"HVMG2"

				: "ami-68002c08"
			},
			"eu-west-1": {
				"PV64": "ami-4cdd453f",
				"HVM64": "ami-f9dd458a",
				"HVMG2"

				: "ami-ed947194"
			},
			"eu-west-2": {
				"PV64": "NOT_SUPPORTED",
				"HVM64": "ami-886369ec",
				"HVMG2"

				: "NOT_SUPPORTED"
			},
			"eu-central-1": {
				"PV64": "ami-6527cf0a",
				"HVM64": "ami-ea26ce85",

				"HVMG2": "ami-cf3294a0"
			},
			"ap-northeast-1": {
				"PV64": "ami-3e42b65f",
				"HVM64": "ami-374db956",

				"HVMG2": "ami-4e0e1f29"
			},
			"ap-northeast-2": {
				"PV64": "NOT_SUPPORTED",
				"HVM64": "ami-2b408b45",

				"HVMG2": "NOT_SUPPORTED"
			},
			"ap-southeast-1": {
				"PV64": "ami-df9e4cbc",
				"HVM64": "ami-a59b49c6",

				"HVMG2": "ami-f35cd290"
			},
			"ap-southeast-2": {
				"PV64": "ami-63351d00",
				"HVM64": "ami-dc361ebf",

				"HVMG2": "ami-e77c6f84"
			},
			"ap-south-1": {
				"PV64": "NOT_SUPPORTED",
				"HVM64": "ami-ffbdd790",

				"HVMG2": "ami-5b6e1034"
			},
			"us-east-2": {
				"PV64": "NOT_SUPPORTED",
				"HVM64": "ami-f6035893",
				"HVMG2"

				: "NOT_SUPPORTED"
			},
			"ca-central-1": {
				"PV64": "NOT_SUPPORTED",
				"HVM64": "ami-730ebd17",

				"HVMG2": "NOT_SUPPORTED"
			},
			"sa-east-1": {
				"PV64": "ami-1ad34676",
				"HVM64": "ami-6dd04501",
				"HVMG2"

				: "NOT_SUPPORTED"
			},
			"cn-north-1": {
				"PV64": "ami-77559f1a",
				"HVM64": "ami-8e6aa0e3",
				"HVMG2"

				: "NOT_SUPPORTED"
			}
		},

		"AWSInstanceType2Arch": {
			"t1.micro": {
				"Arch": "PV64"
			},
			"t2.nano": {
				"Arch": "HVM64"
			},
			"t2.micro": {
				"Arch": "HVM64"
			},
			"t2.small": {
				"Arch": "HVM64"
			},
			"t2.medium": {
				"Arch": "HVM64"
			},
			"t2.large": {
				"Arch": "HVM64"
			},
			"m1.small": {
				"Arch": "PV64"
			},
			"m1.medium": {
				"Arch": "PV64"
			},
			"m1.large": {
				"Arch": "PV64"
			},
			"m1.xlarge": {
				"Arch": "PV64"
			},
			"m2.xlarge": {
				"Arch": "PV64"
			},
			"m2.2xlarge": {
				"Arch": "PV64"
			},
			"m2.4xlarge": {
				"Arch": "PV64"
			},
			"m3.medium": {
				"Arch": "HVM64"
			},
			"m3.large": {
				"Arch": "HVM64"
			},
			"m3.xlarge": {
				"Arch": "HVM64"
			},
			"m3.2xlarge": {
				"Arch": "HVM64"
			},
			"m4.large": {
				"Arch": "HVM64"
			},
			"m4.xlarge": {
				"Arch": "HVM64"
			},
			"m4.2xlarge": {
				"Arch": "HVM64"
			},
			"m4.4xlarge": {
				"Arch": "HVM64"
			},
			"m4.10xlarge": {
				"Arch": "HVM64"
			},
			"c1.medium": {
				"Arch": "PV64"
			},
			"c1.xlarge": {
				"Arch": "PV64"
			},
			"c3.large": {
				"Arch": "HVM64"
			},
			"c3.xlarge": {
				"Arch": "HVM64"
			},
			"c3.2xlarge": {
				"Arch": "HVM64"
			},
			"c3.4xlarge": {
				"Arch": "HVM64"
			},
			"c3.8xlarge": {
				"Arch": "HVM64"
			},
			"c4.large": {
				"Arch": "HVM64"
			},
			"c4.xlarge": {
				"Arch": "HVM64"
			},
			"c4.2xlarge": {
				"Arch": "HVM64"
			},
			"c4.4xlarge": {
				"Arch": "HVM64"
			},
			"c4.8xlarge": {
				"Arch": "HVM64"
			},
			"g2.2xlarge": {
				"Arch": "HVMG2"
			},
			"g2.8xlarge": {
				"Arch": "HVMG2"
			},
			"r3.large": {
				"Arch": "HVM64"
			},
			"r3.xlarge": {
				"Arch": "HVM64"
			},
			"r3.2xlarge": {
				"Arch": "HVM64"
			},
			"r3.4xlarge": {
				"Arch": "HVM64"
			},
			"r3.8xlarge": {
				"Arch": "HVM64"
			},
			"i2.xlarge": {
				"Arch": "HVM64"
			},
			"i2.2xlarge": {
				"Arch": "HVM64"
			},
			"i2.4xlarge": {
				"Arch": "HVM64"
			},
			"i2.8xlarge": {
				"Arch": "HVM64"
			},
			"d2.xlarge": {
				"Arch": "HVM64"
			},
			"d2.2xlarge": {
				"Arch": "HVM64"
			},
			"d2.4xlarge": {
				"Arch": "HVM64"
			},
			"d2.8xlarge": {
				"Arch": "HVM64"
			},
			"hi1.4xlarge": {
				"Arch": "HVM64"
			},
			"hs1.8xlarge": {
				"Arch": "HVM64"
			},
			"cr1.8xlarge": {
				"Arch": "HVM64"
			},
			"cc2.8xlarge": {
				"Arch": "HVM64"
			}
		}
	},
	"Resources": {

		"Ec2Instance01": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["AWSRegionArch2AMI", {
							"Ref": "AWS::Region"
						},
						{
							"Fn::FindInMap": ["AWSInstanceType2Arch", {
								"Ref": "InstanceType"
							}, "Arch"]
						}
					]
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"SecurityGroups": [{
					"Ref": "Ec2ServerSecurityGroup"
				}],
				"KeyName": {
					"Ref": "KeyName"
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -xe\n",
							"yum update -y aws-cfn-bootstrap\n",

							"# Install the files and packages from the metadata\n",
							"/opt/aws/bin/cfn-init -v ",
							"         --stack ", {
								"Ref": "AWS::StackName"
							},
							"         --resource Ec2Instance01 ",
							"         --configsets InstallAndRun ",
							"         --region ", {
								"Ref": "AWS::Region"
							}, "\n",

							"# Signal the status from cfn-init\n",
							"/opt/aws/bin/cfn-signal -e $? ",
							"         --stack ", {
								"Ref": "AWS::StackName"
							},
							"         --resource Ec2Instance01 ",
							"         --region ", {
								"Ref": "AWS::Region"
							}, "\n"
						]]
					}
				}
			}
		},
		"Ec2Instance02": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["AWSRegionArch2AMI", {
							"Ref": "AWS::Region"
						},
						{
							"Fn::FindInMap": ["AWSInstanceType2Arch", {
								"Ref": "InstanceType"
							}, "Arch"]
						}
					]
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"SecurityGroups": [{
					"Ref": "Ec2ServerSecurityGroup"
				}],
				"KeyName": {
					"Ref": "KeyName"
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -xe\n",
							"# Install the files and packages from the metadata\n",
							"/opt/aws/bin/cfn-init -v ",
							"         --stack ", {
								"Ref": "AWS::StackName"
							},
							"         --resource Ec2Instance02 ",
							"         --configsets InstallAndRun ",
							"         --region ", {
								"Ref": "AWS::Region"
							}, "\n",

							"# Signal the status from cfn-init\n",
							"/opt/aws/bin/cfn-signal -e $? ",
							"         --stack ", {
								"Ref": "AWS::StackName"
							},
							"         --resource Ec2Instance02 ",
							"         --region ", {
								"Ref": "AWS::Region"
							}, "\n"
						]]
					}
				}
			}
		},
		"LoadBalancer": {
			"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
			"Properties": {
				"AvailabilityZones": ["us-east-1a"],
				"Instances": [{
						"Ref": "Ec2Instance01"
					},
					{
						"Ref": "Ec2Instance02"
					}
				],
				"Listeners": [{
					"LoadBalancerPort": "80",
					"InstancePort": "80",
					"Protocol": "HTTP"
				}],

				"HealthCheck": {
					"Target": "HTTP:80/",
					"HealthyThreshold": "3",
					"UnhealthyThreshold": "5",
					"Interval": "30",
					"Timeout": "5"
				}
			}
		},

		"Ec2ServerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable HTTP access via port 80",
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
					}
				]
			}
		}
	},

	"Outputs": {
		"WebsiteURL1": {
			"Description": "URL for newly created Apache server",
			"Value": {
				"Fn::Join": ["", ["http://", {
					"Fn::GetAtt": ["Ec2Instance01", "PublicDnsName"]
				}]]
			}
		},
		"WebsiteURL2": {
			"Description": "URL for newly created Apache server",
			"Value": {
				"Fn::Join": ["", ["http://", {
					"Fn::GetAtt": ["Ec2Instance02", "PublicDnsName"]
				}]]
			}
		},
		"URL" : {
      "Description" : "URL of the sample website",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "LoadBalancer", "DNSName" ]}]]}
	}
}
}
